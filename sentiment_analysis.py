# -*- coding: utf-8 -*-
"""sentiment analysis

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1pR8idbmM-L1FguVcYN3MrJtjInJwTq2z
"""

project_twitter_data_file = open("files/project_twitter_data.csv", "r")
resulting_data_file = open("files/resulting_data.csv", "w")

punctuation_chars = ["'", '"', ",", ".", "!", ":", ";", "#", "@"]
positive_words = []
with open("files/positive_words.txt") as pos_f:
    for line in pos_f:
        if line[0] != ";" and line[0] != "\n":
            positive_words.append(line.strip())

def get_pos(str_sentences):
    """
    Calculate the positive score for a given sentence.

    Parameters:
        str_sentences (str): A string representing a sentence.

    Returns:
        int: The positive score for the sentence.
    """
    str_sentences = strip_punctuation(str_sentences)
    list_str_sentences = str_sentences.split()

    count = 0
    for word in list_str_sentences:
        if word in positive_words:
            count += 1
    return count

negative_words = []
with open("files/negative_words.txt") as neg_f:
    for line in neg_f:
        if line[0] != ";" and line[0] != "\n":
            negative_words.append(line.strip())

def get_neg(str_sentences):
    """
    Calculate the negative score for a given sentence.

    Parameters:
        str_sentences (str): A string representing a sentence.

    Returns:
        int: The negative score for the sentence.
    """
    str_sentences = strip_punctuation(str_sentences)
    list_str_sentences = str_sentences.split()

    count = 0
    for word in list_str_sentences:
        if word in negative_words:
            count += 1
    return count

def strip_punctuation(str_word):
    """
    Remove punctuation characters from a given string.

    Parameters:
        str_word (str): A string representing a word.

    Returns:
        str: The word with punctuation characters removed.
    """
    for char_punct in punctuation_chars:
        str_word = str_word.replace(char_punct, "")
    return str_word

def write_in_data_file(resulting_data_file):
    """
    Write the resulting data to a file.

    Parameters:
        resulting_data_file (file): The file to write the data to.
    """
    resulting_data_file.write("Number of Retweets, Number of Replies, Positive Score, Negative Score, Net Score\n")

    for line in project_twitter_data_file:
        list_td = line.strip().split(",")